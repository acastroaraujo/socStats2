{
  "hash": "8fea1a9868f94c96c0162ab6f475826b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Week 10\"\ncallout-appearance: simple\ncallout-icon: false\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Packages and Setup\"}\nlibrary(tidyverse)\nlibrary(panelr)\nlibrary(gapminder)\nlibrary(ggeffects)        # to get and plot predictions from models using ggpredict\n```\n:::\n\n\n## Exercise\n\n**Reshaping data.**\n\nTake a look at the `gapminder` dataset contained in the gapminder pakacage.\n\nThe following chunk of code uses the `pivot_wider()` function to turn this dataset into wider form.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngap_wide <- gapminder::gapminder |> \n  select(continent, country, year, lifeExp, gdpPercap) |> \n  pivot_wider(\n    names_from = year, \n    values_from = c(lifeExp, gdpPercap), \n    names_sep = \"\"\n  )\n\ngap_wide\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 142 × 26\n   continent country lifeExp1952 lifeExp1957 lifeExp1962 lifeExp1967 lifeExp1972\n   <fct>     <fct>         <dbl>       <dbl>       <dbl>       <dbl>       <dbl>\n 1 Asia      Afghan…        28.8        30.3        32.0        34.0        36.1\n 2 Europe    Albania        55.2        59.3        64.8        66.2        67.7\n 3 Africa    Algeria        43.1        45.7        48.3        51.4        54.5\n 4 Africa    Angola         30.0        32.0        34          36.0        37.9\n 5 Americas  Argent…        62.5        64.4        65.1        65.6        67.1\n 6 Oceania   Austra…        69.1        70.3        70.9        71.1        71.9\n 7 Europe    Austria        66.8        67.5        69.5        70.1        70.6\n 8 Asia      Bahrain        50.9        53.8        56.9        59.9        63.3\n 9 Asia      Bangla…        37.5        39.3        41.2        43.5        45.3\n10 Europe    Belgium        68          69.2        70.2        70.9        71.4\n# ℹ 132 more rows\n# ℹ 19 more variables: lifeExp1977 <dbl>, lifeExp1982 <dbl>, lifeExp1987 <dbl>,\n#   lifeExp1992 <dbl>, lifeExp1997 <dbl>, lifeExp2002 <dbl>, lifeExp2007 <dbl>,\n#   gdpPercap1952 <dbl>, gdpPercap1957 <dbl>, gdpPercap1962 <dbl>,\n#   gdpPercap1967 <dbl>, gdpPercap1972 <dbl>, gdpPercap1977 <dbl>,\n#   gdpPercap1982 <dbl>, gdpPercap1987 <dbl>, gdpPercap1992 <dbl>,\n#   gdpPercap1997 <dbl>, gdpPercap2002 <dbl>, gdpPercap2007 <dbl>\n```\n\n\n:::\n:::\n\n\n::: callout-note\nExercise:\n\n-   Use the `panelr` package to turn the dataset back to its original long form and save it as `gap_long`.\n\n-   Use the `panelr` package to turn the `gap_long` into `gap_wide`, essentially replicating what I did earlier with `pivot_wider()`\n:::\n\n::: callout-tip\nHint: The functions you are looking for are called `long_panel()` and `widen_panel()`.\n:::\n\n## Exercise\n\n::: callout-note\nSlide 33 contains a very simple visualization made using the `line_plot()` function.\n\nTry your best to make a similar graph for the `gapminder` dataset, with year on the x-axis and `lifeExp` on the y-axis for a random subset of 10 countries.\n\n*Use `ggplot2`, do not use `line_plot()`*\n:::\n\n## Exercise\n\n*ICC*\n\n::: callout-note\nSteve introduced the measurement of \"intra class correlation\" (ICC) in class.\n\nWhat is the ICC for `lifeExp`, `pop`, and `gdpPercap` in the `gapminder` dataset?\n:::\n\n## Exercise\n\n::: callout-note\nUse the `WageData` from the `panelr` package. You don't need to make a `panel_data` version of `WageData` for this analysis, but you can if you want. We will use it later. Estimate the following mixed models using `lmer()` with maximum likelihood (`REML = FALSE`):\n\n1.  Log wage as a function of college and linear time\n2.  As #1, plus a random slope on time\n3.  As #2, but with time as a quadratic\n\nYou may get some warning messages. The correct specifications of these models fit well, but you can use `lme4::allFit()` if you *really* want to make sure that you're getting trustworthy results.\n\nOnce you have estimated the models, compare their BIC values using `BIC()`. Select the best model (here, the one with the lowest BIC) then do the following:\n\n1.  Report the estimated effect of college on log wages given the data and model. You can get this using `tidy()`, `summary()`, or any other function you prefer.\n2.  Use `ggpredict() |> plot()` (or another approach if you like) to plot predictions for a sample of 9 individuals over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"WageData\", package = \"panelr\")\n\nWageData <- WageData |> \n  mutate(\n    college = if_else(ed >= 16, 1L, 0L),  # college variable\n    t0 = t - 1                            # start time at 0\n  )\n```\n:::\n\n\nThe model output that comes from the `lmer()` looks very different from the ones produced by `lm()` and `glm()`. Take note of anything you don't understand in the output and be ready to ask questions in class about the things you don't understand.\n:::\n",
    "supporting": [
      "week10_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}