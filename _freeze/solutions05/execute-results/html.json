{
  "hash": "dd64f26c3fef16483f9760b1366b439f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Solutions 5\"\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Set up\"}\nlibrary(tidyverse)\nlibrary(gssr)\nlibrary(marginaleffects)\nlibrary(broom)\n\ngss2022 <- gss_get_yr(2022)\n```\n:::\n\n\n## Linear Regression\n\n*We will use this data.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndols <- gss2022 |> \n  select(tvhours, degree, madeg, padeg) |> \n  mutate(pardeg = pmax(madeg, padeg, na.rm = TRUE),\n         college = if_else(degree >= 3, 1L, 0L),\n         parcol = if_else(pardeg >= 3, 1L, 0L)) |>\n  select(tvhours, college, parcol) |> \n  drop_na()\n```\n:::\n\n\n### Exercise\n\n**Additive link function, no interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod1 <- lm(tvhours ~ college + parcol, data = dols)\n\n# ATE estimate\navg_slopes(mod1, variables = \"college\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term  contrast estimate std.error statistic p.value s.value conf.low conf.high\n  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>     <dbl>\n1 coll… 1 - 0      -0.796     0.151     -5.27 1.35e-7    22.8    -1.09    -0.500\n```\n\n\n:::\n:::\n\n\n**Answer (using base R):**\n\n\n::: {.cell}\n\n```{.r .cell-code}\np0 <- predict(mod1, newdata = dols |> mutate(college = 0))\np1 <- predict(mod1, newdata = dols |> mutate(college = 1))\n\nmean(p1 - p0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.7957246\n```\n\n\n:::\n:::\n\n\nATT/ATU estimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(\n  model = mod1, \n  variables = \"college\",\n  by = \"college\" # separately by treatment group\n) |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term    contrast college estimate std.error statistic p.value s.value conf.low\n  <chr>   <chr>      <int>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>\n1 college mean(1)…       0   -0.796     0.151     -5.27 1.35e-7    22.8    -1.09\n2 college mean(1)…       1   -0.796     0.151     -5.27 1.35e-7    22.8    -1.09\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer (using using base R):**\n\n*Note. You should be able to know that the answer will be exactly the same because of the model being used.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndols$p0 <- predict(mod1, newdata = dols |> mutate(college = 0))\ndols$p1 <- predict(mod1, newdata = dols |> mutate(college = 1))\n\ndols |> \n  mutate(estimate = p1 - p0) |> \n  group_by(college) |> \n  summarize(estimate = mean(estimate))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0   -0.796\n2       1   -0.796\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Additive link function, with interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod2 <- lm(tvhours ~ college * parcol, data = dols)\n\n# ATE estimate\navg_slopes(mod2, variables = \"college\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term  contrast estimate std.error statistic p.value s.value conf.low conf.high\n  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>     <dbl>\n1 coll… 1 - 0      -0.803     0.152     -5.29 1.20e-7    23.0    -1.10    -0.506\n```\n\n\n:::\n:::\n\n\n**Answer (using matrix algebra):**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta <- coefficients(mod2) |> as.matrix(ncol = 1) ## ensures this is a column vector\n\nM0 <- model.matrix(tvhours ~ college * parcol, data = dols |> mutate(college = 0))\npred0 <- M0 %*% beta\n\nM1 <- model.matrix(tvhours ~ college * parcol, data = dols |> mutate(college = 1))\npred1 <- M1 %*% beta\n\nmean(pred1 - pred0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.8033206\n```\n\n\n:::\n:::\n\n\nATT/ATU estimate\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(\n  model = mod2, \n  variables = \"college\",\n  by = \"college\" # separately by treatment group\n) |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term    contrast college estimate std.error statistic p.value s.value conf.low\n  <chr>   <chr>      <int>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>\n1 college mean(1)…       0   -0.821     0.160     -5.14 2.70e-7    21.8    -1.13\n2 college mean(1)…       1   -0.772     0.159     -4.87 1.13e-6    19.8    -1.08\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer (using previous calculations)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndols$p1 <- pred1\ndols$p0 <- pred0\n\ndols |> \n  group_by(college) |> \n  summarize(estimate = mean(p1 - p0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0   -0.821\n2       1   -0.772\n```\n\n\n:::\n:::\n\n\n## Poisson Regression\n\n*We will use this data.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp <- gss2022 |>\n  filter(wrkstat == 1) |> # full time workers\n  select(realrinc, degree, madeg, padeg, sex, age) |> \n  mutate(pardeg = pmax(madeg, padeg, na.rm = TRUE),\n         college = if_else(degree >= 3, 1L, 0L),\n         parcol = if_else(pardeg >= 3, 1L, 0L),\n         female = if_else(sex == 2, 1L, 0L),\n         realrinc = floor(realrinc)) |>             # integer\n  select(realrinc, college, parcol, female, age) |> \n  drop_na()\n```\n:::\n\n\n### Exercise\n\n**Using the log-counts, no interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqp1 <- glm(realrinc ~ college + (parcol + female + age + I(age^2)), \n           data = dqp,\n           family = \"quasipoisson\")\n\navg_slopes(qp1,\n           variables = \"college\",\n           type = \"link\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term    contrast estimate std.error statistic  p.value s.value conf.low\n  <chr>   <chr>       <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 college 1 - 0       0.599    0.0510      11.7 7.45e-32    103.    0.499\n# ℹ 1 more variable: conf.high <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\npred0 <- predict(qp1, newdata = mutate(dqp, college = 0), type = \"link\")\npred1 <- predict(qp1, newdata = mutate(dqp, college = 1), type = \"link\")\n\nmean(pred1 - pred0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5994521\n```\n\n\n:::\n:::\n\n\nATU/ATT\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp1,\n           variables = \"college\",\n           type = \"link\",\n           by = \"college\") |> # separately by treatment group\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term   contrast college estimate std.error statistic  p.value s.value conf.low\n  <chr>  <chr>      <int>    <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 colle… mean(1)…       0    0.599    0.0510      11.7 7.45e-32    103.    0.499\n2 colle… mean(1)…       1    0.599    0.0510      11.7 7.45e-32    103.    0.499\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp$pred0 <- pred0\ndqp$pred1 <- pred1\n\ndqp |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0    0.599\n2       1    0.599\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Non-linear response, no interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp1,\n           variables = \"college\",\n           type = \"response\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term    contrast estimate std.error statistic  p.value s.value conf.low\n  <chr>   <chr>       <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 college 1 - 0      21237.     1831.      11.6 4.18e-31    101.   17649.\n# ℹ 1 more variable: conf.high <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## use appropriate link function for Poisson\ndqp$pred0 <- exp(pred0)\ndqp$pred1 <- exp(pred1)\n\ndqp |> \n  summarize(ate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n     ate\n   <dbl>\n1 21237.\n```\n\n\n:::\n:::\n\n\nATT/ ATU\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp1,\n           variables = \"college\",\n           type = \"response\",\n           by = \"college\") |> # separately by treatment group\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term   contrast college estimate std.error statistic  p.value s.value conf.low\n  <chr>  <chr>      <int>    <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 colle… mean(1)…       0   20636.     1861.      11.1 1.41e-28    92.5   16988.\n2 colle… mean(1)…       1   21977.     1816.      12.1 1.05e-33   110.    18417.\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp |> \n  group_by(college) |> \n  summarize(ate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college    ate\n    <int>  <dbl>\n1       0 20636.\n2       1 21977.\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Using the log-counts, with interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqp2 <- glm(realrinc ~ college * (parcol + female + age + I(age^2)), \n           data = dqp,\n           family = \"quasipoisson\")\n\navg_slopes(qp2,\n           variables = \"college\",\n           type = \"link\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term    contrast estimate std.error statistic  p.value s.value conf.low\n  <chr>   <chr>       <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 college 1 - 0       0.580    0.0543      10.7 1.20e-26    86.1    0.474\n# ℹ 1 more variable: conf.high <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer**:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp$pred0 <- predict(qp2, newdata = mutate(dqp, college = 0), type = \"link\")\ndqp$pred1 <- predict(qp2, newdata = mutate(dqp, college = 1), type = \"link\")\n\ndqp |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  estimate\n     <dbl>\n1    0.580\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp2,\n           variables = \"college\",\n           type = \"link\",\n           by = \"college\") |> # separately by treatment group\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term   contrast college estimate std.error statistic  p.value s.value conf.low\n  <chr>  <chr>      <int>    <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 colle… mean(1)…       0    0.567    0.0571      9.94 2.77e-23    74.9    0.455\n2 colle… mean(1)…       1    0.596    0.0600      9.94 2.87e-23    74.9    0.479\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0    0.567\n2       1    0.596\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Non-linear response, with interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp2,\n           variables = \"college\",\n           type = \"response\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term    contrast estimate std.error statistic  p.value s.value conf.low\n  <chr>   <chr>       <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 college 1 - 0      21190.     1817.      11.7 1.99e-31    102.   17629.\n# ℹ 1 more variable: conf.high <dbl>\n```\n\n\n:::\n:::\n\n\n**Answer:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp$pred0 <- predict(qp2, newdata = mutate(dqp, college = 0), type = \"response\")\ndqp$pred1 <- predict(qp2, newdata = mutate(dqp, college = 1), type = \"response\")\n\ndqp |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  estimate\n     <dbl>\n1   21190.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp2,\n           variables = \"college\",\n           type = \"response\",\n           by = \"college\") |> # separately by treatment group\n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term   contrast college estimate std.error statistic  p.value s.value conf.low\n  <chr>  <chr>      <int>    <dbl>     <dbl>     <dbl>    <dbl>   <dbl>    <dbl>\n1 colle… mean(1)…       0   20196.     1937.      10.4 1.90e-25    82.1   16400.\n2 colle… mean(1)…       1   22411.     1963.      11.4 3.51e-30    97.8   18563.\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndqp |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0   20196.\n2       1   22411.\n```\n\n\n:::\n:::\n\n\n## Logistic Regression\n\n*We will use this data.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr <- gss2022 |>\n  select(abany, degree, madeg, padeg, sex, age) |> \n  mutate(pardeg = pmax(madeg, padeg, na.rm = TRUE),\n         college = if_else(degree >= 3, 1L, 0L),\n         parcol = if_else(pardeg >= 3, 1L, 0L),\n         female = if_else(sex == 2, 1L, 0L),\n         abany = if_else(abany == 1, 1L, 0L)) |>\n  select(abany, college, parcol, female, age) |> \n  drop_na()\n```\n:::\n\n\n### Exercise\n\n**Using log-odds, no interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlr1 <- glm(abany ~ college + (parcol + female + age + I(age^2)),\n          data = dlr,\n          family = binomial)\n\n# ATE estimate\navg_slopes(lr1,\n           variables = \"college\",\n           type = \"link\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term  contrast estimate std.error statistic p.value s.value conf.low conf.high\n  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>     <dbl>\n1 coll… 1 - 0       0.438     0.146      3.00 0.00273    8.52    0.151     0.724\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr$pred0 <- predict(lr1, newdata = dlr |> mutate(college = 0), type = \"link\")\ndlr$pred1 <- predict(lr1, newdata = dlr |> mutate(college = 1), type = \"link\")\n\ndlr |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  estimate\n     <dbl>\n1    0.438\n```\n\n\n:::\n:::\n\n\nATT/ATU\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(lr1,\n           variables = \"college\",\n           by = \"college\",\n           type = \"link\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term    contrast college estimate std.error statistic p.value s.value conf.low\n  <chr>   <chr>      <int>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>\n1 college mean(1)…       0    0.438     0.146      3.00 0.00273    8.52    0.151\n2 college mean(1)…       1    0.438     0.146      3.00 0.00273    8.52    0.151\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0    0.438\n2       1    0.438\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Using non-linear response (aka probabilities), no interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ATE estimate\navg_slopes(lr1,\n           variables = \"college\",\n           type = \"response\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term  contrast estimate std.error statistic p.value s.value conf.low conf.high\n  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>     <dbl>\n1 coll… 1 - 0       0.102    0.0337      3.02 0.00249    8.65   0.0359     0.168\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr |> \n  mutate(across(starts_with(\"pred\"), plogis)) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  estimate\n     <dbl>\n1    0.102\n```\n\n\n:::\n:::\n\n\nATT/ATU\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(lr1,\n           variables = \"college\",\n           by = \"college\",\n           type = \"response\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term    contrast college estimate std.error statistic p.value s.value conf.low\n  <chr>   <chr>      <int>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>\n1 college mean(1)…       0   0.104     0.0341      3.04 0.00235    8.73   0.0369\n2 college mean(1)…       1   0.0989    0.0330      2.99 0.00275    8.51   0.0342\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr |> \n  mutate(across(starts_with(\"pred\"), plogis)) |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0   0.104 \n2       1   0.0989\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Using log-odds, with interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlr2 <- glm(abany ~ college * (parcol + female + age + I(age^2)),\n          data = dlr,\n          family = binomial)\n\n# ATE estimate\navg_slopes(lr2,\n           variables = \"college\",\n           type = \"link\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term  contrast estimate std.error statistic p.value s.value conf.low conf.high\n  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>     <dbl>\n1 coll… 1 - 0       0.453     0.149      3.04 0.00239    8.71    0.161     0.745\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr$pred0 <- predict(lr2, newdata = dlr |> mutate(college = 0), type = \"link\")\ndlr$pred1 <- predict(lr2, newdata = dlr |> mutate(college = 1), type = \"link\")\n\ndlr |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  estimate\n     <dbl>\n1    0.453\n```\n\n\n:::\n:::\n\n\nATT/ATU:\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(lr2,\n           variables = \"college\",\n           by = \"college\",\n           type = \"link\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term    contrast college estimate std.error statistic p.value s.value conf.low\n  <chr>   <chr>      <int>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>\n1 college mean(1)…       0    0.450     0.159      2.83 0.00460    7.76    0.139\n2 college mean(1)…       1    0.458     0.161      2.85 0.00435    7.84    0.143\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0    0.450\n2       1    0.458\n```\n\n\n:::\n:::\n\n\n### Exercise\n\n**Using non-linear response (aka probabilities), with interactions**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ATE estimate\navg_slopes(lr2,\n           variables = \"college\",\n           type = \"response\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 9\n  term  contrast estimate std.error statistic p.value s.value conf.low conf.high\n  <chr> <chr>       <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>     <dbl>\n1 coll… 1 - 0       0.103    0.0338      3.05 0.00228    8.78   0.0369     0.169\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr$pred0 <- predict(lr2, newdata = dlr |> mutate(college = 0), type = \"response\")\ndlr$pred1 <- predict(lr2, newdata = dlr |> mutate(college = 1), type = \"response\")\n\ndlr |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  estimate\n     <dbl>\n1    0.103\n```\n\n\n:::\n:::\n\n\nATT/ATU\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(lr2,\n           variables = \"college\",\n           by = \"college\",\n           type = \"response\") |> \n  tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 13\n  term    contrast college estimate std.error statistic p.value s.value conf.low\n  <chr>   <chr>      <int>    <dbl>     <dbl>     <dbl>   <dbl>   <dbl>    <dbl>\n1 college mean(1)…       0    0.104    0.0363      2.87 0.00407    7.94   0.0332\n2 college mean(1)…       1    0.101    0.0353      2.87 0.00415    7.91   0.0320\n# ℹ 4 more variables: conf.high <dbl>, predicted_lo <dbl>, predicted_hi <dbl>,\n#   predicted <dbl>\n```\n\n\n:::\n:::\n\n\nAnswer:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndlr |> \n  group_by(college) |> \n  summarize(estimate = mean(pred1 - pred0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  college estimate\n    <int>    <dbl>\n1       0    0.104\n2       1    0.101\n```\n\n\n:::\n:::\n\n\n## Bootstrap Standard Errors\n\nSo far, we haven't calculated the standard errors at all. And yet `marginaleffects` does this seamlessly.\n\nHere is a potential bootstrap implementation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbootstrap_ate <- function(obj, treatment, type = c(\"response\", \"link\"), S = 5e3) {\n  ## Note. This code is inefficient and will only work with \"glm\" objects.  \n  type <- match.arg(type)\n  data <- obj$data\n  \n  ## will only work if \"treatment\" is binary (0, 1)\n  data0 <- mutate(data, {{treatment}} := 0)\n  data1 <- mutate(data, {{treatment}} := 1)\n  \n  out <- replicate(S, {\n    i <- sample(nrow(data), replace = TRUE)\n    nobj <- glm(obj$formula, data = data[i, ], family = obj$family)\n    pred0 <- predict(nobj, newdata = data0[i, ], type = type)\n    pred1 <- predict(nobj, newdata = data1[i, ], type = type)\n    mean(pred1 - pred0)\n  })\n  \n  return(out)\n}\n```\n:::\n\n\nLogistic Regression using link function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(lr2, variables = \"college\", type = \"link\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Term Contrast Estimate Std. Error    z Pr(>|z|)   S 2.5 % 97.5 %\n college    1 - 0    0.453      0.149 3.04  0.00239 8.7 0.161  0.745\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  link \n```\n\n\n:::\n\n```{.r .cell-code}\nout <- bootstrap_ate(lr2, treatment = \"college\", type = \"link\")\nc(\"estimate\" = mean(out), \"std. error\" = sd(out))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  estimate std. error \n 0.4591273  0.1523844 \n```\n\n\n:::\n:::\n\n\nLogistic Regression using response function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(lr2, variables = \"college\", type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Term Contrast Estimate Std. Error    z Pr(>|z|)   S  2.5 % 97.5 %\n college    1 - 0    0.103     0.0338 3.05  0.00228 8.8 0.0369  0.169\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n```\n\n\n:::\n\n```{.r .cell-code}\nout <- bootstrap_ate(lr2, college, type = \"response\")\nc(\"estimate\" = mean(out), \"std. error\" = sd(out))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  estimate std. error \n0.10255629 0.03285331 \n```\n\n\n:::\n:::\n\n\nPoisson Regression using link function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp1, variables = \"college\", type = \"link\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Term Contrast Estimate Std. Error    z Pr(>|z|)     S 2.5 % 97.5 %\n college    1 - 0    0.599      0.051 11.7   <0.001 103.4 0.499  0.699\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  link \n```\n\n\n:::\n\n```{.r .cell-code}\nout <- bootstrap_ate(qp1, treatment = \"college\", type = \"link\")\nmean(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6006587\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.05141052\n```\n\n\n:::\n:::\n\n\nPoisson Regression using response function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(qp2, variables = \"college\", type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Term Contrast Estimate Std. Error    z Pr(>|z|)     S 2.5 % 97.5 %\n college    1 - 0    21190       1817 11.7   <0.001 102.0 17629  24751\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n```\n\n\n:::\n\n```{.r .cell-code}\nout <- bootstrap_ate(qp2, treatment = \"college\", type = \"response\")\nc(\"estimate\" = mean(out), \"std. error\" = sd(out))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  estimate std. error \n 21220.161   1901.668 \n```\n\n\n:::\n:::\n\n\n### Linear Regression\n\nHere is a function that designed towork with `lm` objects.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbootstrap_ate_ols <- function(obj, data, treatment, S = 5e3) {\n  \n  ## will only work if \"treatment\" is binary (0, 1)\n  data0 <- mutate(data, {{treatment}} := 0)\n  data1 <- mutate(data, {{treatment}} := 1)\n  \n  out <- replicate(S, {\n    i <- sample(nrow(data), replace = TRUE)\n    nobj <- lm(obj$call$formula, data = data[i, ])\n    pred0 <- predict(nobj, newdata = data0[i, ])\n    pred1 <- predict(nobj, newdata = data1[i, ])\n    mean(pred1 - pred0)\n  })\n  \n  return(out)\n}\n\navg_slopes(mod2, variables = \"college\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Term Contrast Estimate Std. Error     z Pr(>|z|)    S 2.5 % 97.5 %\n college    1 - 0   -0.803      0.152 -5.29   <0.001 23.0  -1.1 -0.506\n\nColumns: term, contrast, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high \nType:  response \n```\n\n\n:::\n\n```{.r .cell-code}\nout <- bootstrap_ate_ols(mod2, data = dols, treatment = \"college\")\nmean(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.8038928\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1299901\n```\n\n\n:::\n:::\n\n\n*Wait a minute! Something is wrong...*\n\nThe bootstrap standard error is much smaller than the standard error calculated by `avg_slopes()`.\n\nHowever, if you ask `marginaleffects` to re-calculate the standard errors using a bootstrap you'll see that the answers coincide.\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_slopes(mod2, variables = \"college\") |> \n  inferences(method = \"boot\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n    Term Contrast Estimate Std. Error 2.5 % 97.5 %\n college    1 - 0   -0.803      0.127 -1.04 -0.542\n\nColumns: term, contrast, estimate, std.error, conf.low, conf.high \nType:  response \n```\n\n\n:::\n:::\n\n\nBut there's still something weird with just accepting this weird fact and moving on.\n\n*What is happening?*\n\n**Read on *if and only if* you want to go down a rabbit hole.**\n\nThe reason for this—and I will change this explanation if Steve tells me it's incorrect—is that the results were similar enough for Logistic and Poisson regression because they have no extra parameter for the *variance.*\n\nRecall that we can write down a linear regression as follows:\n\n$$\n\\begin{align}\ny_i = \\alpha + \\beta x_i + \\varepsilon_i, && \\varepsilon \\sim \\text{Normal}(0, \\sigma)\n\\end{align}\n$$\n\nThis extra $\\sigma$ parameter only exists in normal linear regression.\n\nI think what is going on in the bootstrap is that the uncertainty about the variance isn't \"propagating\" when calculating the ATE. *This means that the standard error for the ATE is always going to be underestimated* unless we do something about this.\n\nI am pretty sure the `marginaleffects` package estimates the standard error for the ATE in a way that takes into account this additional source of uncertainty.\n\nSo I modified the previous bootstrap function to incorporate some extra noise coming from $\\sigma$. The results are not exactly the same, but they are closer.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbootstrap_ate_ols2 <- function(obj, data, treatment, S = 5e3) {\n  \n  data0 <- mutate(data, {{treatment}} := 0)\n  data1 <- mutate(data, {{treatment}} := 1)\n  \n  out <- replicate(S, {\n    i <- sample(nrow(data), replace = TRUE)\n    nobj <- lm(obj$call$formula, data = data[i, ])\n    \n    pred0 <- predict(nobj, newdata = data0[i, ])\n    pred1 <- predict(nobj, newdata = data1[i, ])\n    \n    ## extra noise:\n    n <- nrow(data)\n    sigma <- sd(nobj$residuals)\n    mean(rnorm(n, pred1, sigma) - rnorm(n, pred0, sigma))\n    \n  })\n  \n  return(out)\n}\n\nout <- bootstrap_ate_ols2(mod2, data = dols, treatment = \"college\")\nmean(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.8032193\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1612529\n```\n\n\n:::\n:::\n\n\nThis result is *better*.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}